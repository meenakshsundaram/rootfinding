/*
 *    This file is a part of the rootfinding libary. 
 *    rootfinding is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU Lesser General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *    rootfinding is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public License
 *    along with rootfinding.  If not, see <http://www.gnu.org/licenses/>.
 *
 *    Copyright 2009 Meenakshi Sundaram   
*/

 
This library provides the following algorithms for Root finding :

Bisection Method
Secant Method
Newton Raphson Method
Fixed Point Iteration Method
Aitkens Acceleration for the Fixed Point Iteration
Ridders Method

It is a simple implementation and does not take guard for overflows. Go through the header file for usage. This accepts the following function definition:

double function(void *user,double x)
where
*user can be any type and has to be type cast inside the function and contains the parameters for the function,
x is the variable over which we search for the root.

Run the make utility to compile all the files and then try out the testall file. 
